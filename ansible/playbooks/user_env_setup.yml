---
- name: Configure user environment
  hosts: all
  become: yes
  vars:
    target_user: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"
    target_user_home: "/home/{{ target_user }}"  # Explicitly set the home directory

  tasks:
    - name: Debug variables
      debug:
        msg:
          - "Target User: {{ target_user }}"
          - "Home Directory: {{ target_user_home }}"

    - name: Create user automation directory
      file:
        path: "{{ target_user_home }}/.automated-user-env"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'
      become: yes

    - name: Copy config files to automation directory
      copy:
        src: "../../configs/{{ item }}"
        dest: "{{ target_user_home }}/.automated-user-env/{{ item }}"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'
      loop:
        - bashrc
        - bash_profile
      become: yes

    - name: Ensure config files are sourced
      blockinfile:
        path: "{{ target_user_home }}/{{ item.file }}"
        create: yes
        block: |
          # Source automated-user-env configurations
          if [ -f ~/.automated-user-env/{{ item.config }} ]; then
              source ~/.automated-user-env/{{ item.config }}
          fi
        marker: "# {mark} AUTOMATED-USER-ENV MANAGED BLOCK"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'
      loop:
        - { file: '.bashrc', config: 'bashrc' }
        - { file: '.bash_profile', config: 'bash_profile' }
      become: yes

    # Force reload of shell configuration
    - name: Reload shell configuration
      shell: |
        . {{ target_user_home }}/.bashrc
      args:
        executable: /bin/bash
      become: yes
      become_user: "{{ target_user }}"
